#pragma once
#include <string>
#include <cstdio>
#include <cstring>

// TODO : have this done by the build system
#define TAPE_HEADER_VERSION 1000lu

struct TapeHeaderMessage
{
    char CompileDate[16];
    uint64_t Version;

    TapeHeaderMessage()
    {
        std::strcpy(CompileDate, __DATE__);
        Version = TAPE_HEADER_VERSION;         // Should be generated by the build system eventually
    }

    bool verify()
    {
        return (std::strcmp(CompileDate, __DATE__) == 0 && Version == TAPE_HEADER_VERSION);
    }

    std::string expected(void) const
    {
        char buffer[128];
        snprintf(buffer, 128, "%s %lu", __DATE__, TAPE_HEADER_VERSION );
        return buffer;
    }

    std::string txt(void) const
    {
        char buffer[128];
        snprintf(buffer, 128, "%s %llu", CompileDate, Version);
        return buffer;
    }

};
